#设置eureka基本信息
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
server:
  port: 8081
  servlet:
    context-path: /joeyUserSystem
#设置feign的超时时长
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 3000
#配置hystrix熔断器
hystrix:
  metrics:
    enabled: true
logging:
  level:
    com.mengshujoey.mengshuusersystem: debug
spring:
  application:
    name: joey-user-system
  profiles:
    active: test
  cache:
    type: redis
    redis:
      time-to-live: 20000
      cache-null-values: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
      file-size-threshold: 10MB
  datasource:
    username: ****
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: ****
    url: jdbc:mysql://****?serverTimezone=Asia/Shanghai&characterEncoding=utf-8
    hikari:
      connection-timeout: 10000
      validation-timeout: 3000
      idle-timeout: 60000
      login-timeout: 5
      max-lifetime: 60000
      maximum-pool-size: 10
      minimum-idle: 5
      read-only: false
  redis:
    host: localhost
    jedis:
      pool:
        max-idle: 500
        max-wait: 100
        max-active: 1000
        min-idle: 100
    timeout: 1000
  rabbitmq:
    port: ****
    host: ****
    username: ****
    password: ****
    virtual-host: /
mybatis-plus:
  #配置MyBatis映射文件
  mapper-locations: classpath:/mapper/*.xml
  #配置MyBatis返回类型别名
  type-aliases-package: com.mengshujoey.backend.pojo
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    jdbc-type-for-null: 'null'
    default-statement-timeout: 3000
  #      日志输出
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      update-strategy: ignored
page helper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
#  方案1：缓存数据存储加密数据，但是更新的时候将缓存数据删除。
#      优点：
#      1、提升缓存数据的查询速度
#      缺点：
#      1、容易造成缓存雪崩问题
#
#  方案2：缓存数据存储铭文数据，但是每次查询的时候将缓存数据加密之后传输。
#      优点：
#      1、不会出现缓存雪崩问题
#      缺点：
#      1、每次查询需要将数据进行加密处理，高访问量的时候影响性能。
# true采用方案1，false：采用方案2
redisCache:
  cacheEncryption: true  # !!! 注意修改此配置之前需要删除redis中缓存此页面的数据，防止缓存冲突 flushall